[project]
name = "MineContext"
version = "0.1.0"
description = "An open-source, proactive context-aware AI partner"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "Apache-2.0" }
authors = [
    { name = "MineContext Team" }
]
keywords = ["AI", "context", "automation", "productivity"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "pydantic",
    "loguru",
    "pyyaml",
    "pandas",
    "fastapi",
    "uvicorn",
    "openai",
    "jinja2",
    "json-repair",
    "ddgs",
    "pypdf",
    "openpyxl",
    "chromadb",
    "mss",
    "volcengine",
    "pillow",
    "imagehash",
    "pypdfium2>=4.30.0",
    "python-docx>=1.0.0"
]

[project.optional-dependencies]
dev = [
    "black>=24.8.0",
    "isort>=5.13.0",
    "pre-commit>=3.6.0",
]

[project.scripts]
opencontext = "opencontext.cli:main"

[project.urls]
Homepage = "https://github.com/volcengine/MineContext"
Repository = "https://github.com/volcengine/MineContext"
Issues = "https://github.com/volcengine/MineContext/issues"
Documentation = "https://github.com/volcengine/MineContext"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["opencontext"]

# Black - 代码格式化工具
[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312", "py313"]
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | node_modules
  | frontend
)/
'''

# isort - import 语句排序工具
[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true
known_first_party = ["opencontext"]
extend_skip_glob = ["frontend/*", "node_modules/*"]
